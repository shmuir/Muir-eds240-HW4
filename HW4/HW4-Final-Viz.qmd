---
title: "HW4: Final Viz"
author: "Sam Muir"
date: 2024-03-06
format:
  html:
    embed-resources: true
---

```{r, echo = FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```

```{r, libraries, message=FALSE}
# libraries
library(tidyverse)
library(janitor)
library(sf)
library(sysfonts)
library(scales)
library(patchwork)
library(ggtext)
```

```{r}
# read in the data
animals <- read_csv("data/animals/PLT-GCEM-1610_Animals_9_0.CSV", skip = 2)[-c(1,2),]
biomass <- read_csv("data/biomass/PLT-GCEM-1610_Biomass_10_0.CSV", skip = 2)[-c(1,2),]
vegetation <- read_csv("data/vegetation/PLT-GCEM-1610_Vegetation_9_0.CSV", skip = 2)[-c(1,2),]
stemheight <- read_csv("data/stemheight/PLT-GCEM-1610_StemHeight_10_0.CSV", skip = 2)[-c(1,2),]
```

```{r, data cleaning, warning=FALSE, message=FALSE}
# data cleaning 
animals_clean <- animals %>%
  clean_names() %>%
  mutate_at(c("latitude", "longitude", "littoraria_count"), as.numeric) %>% # change cols to numeric
  mutate_at(c("grasshopper_abundance_index", "prokelisia_abundance_index", "littoraria_quadrat_area", "plot_number", "spartina_zone"), as.factor) %>% # change cols to factor
  mutate(date = lubridate::as_date(date)) # change date to a date

biomass_clean <- biomass %>%
  clean_names() %>%
  mutate_at(c("biomass_aboveground_green", "biomass_aboveground_brown", "biomass_aboveground_total", "biomass_belowground_0to10cm", "biomass_belowground_10to30cm", "biomass_belowground_total", "rhizomes_0to10cm", "root_to_shoot_ratio"), as.numeric) %>% # change cols to numeric
  mutate_at(c("spartina_zone", "replicate"), as.factor) %>% # change cols to factor
  mutate(date = lubridate::as_date(date)) # change date to a date

stemheight_clean <- stemheight %>%
  clean_names() %>%
  mutate_at(c("spartina_zone"), as.factor) %>% # change cols to factor
  mutate_at(c("core_number", "stem_number", "stem_height"), as.numeric) %>% # change cols to numeric
  mutate(date = lubridate::as_date(date))

## maybe there was a better way to do all of this? but seems like good practice either way 

# joining some of the data frames
stem_animals <- full_join(animals_clean, stemheight_clean, relationship = "many-to-many") %>% # join animals and stemheight
  mutate(year = as.factor(year(date)), # get year from the date
         month = as.factor(month(date))) %>% # get month from the date
  full_join(biomass_clean)
```

## Data preparation

```{r}
month.name.short = c("Jan", "Feb", "March", "April", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec")

# prepare grasshopper data for heatmap ----
invert_binary <- stem_animals %>%
  filter(year != 2013) %>% # data collection began par way through 2013
  mutate(month_name = as.factor(month.name.short[month]), # adding the written out month name
         month_name = factor(month_name, levels = month.name.short),
         grasshopper_abundance_index = as.character(grasshopper_abundance_index), # convert abundance to character
         prokelisia_abundance_index = as.character(prokelisia_abundance_index), # convert abundance to numeric
         grasshopper_abundance_index = as.numeric(grasshopper_abundance_index), # convert abundance to character
         prokelisia_abundance_index = as.numeric(prokelisia_abundance_index)) %>% # convert abundance to numeric
  dplyr::select(month, month_name, year, date, grasshopper_abundance_index, prokelisia_abundance_index) %>% # select necessary columns
  group_by(month_name, year) %>% # group to summarize counts 
  summarise(Grasshopper = max(grasshopper_abundance_index), # find the max for each month of each year
            Planthopper = max(prokelisia_abundance_index), # find the max for each month of each year
            Grasshopper = as.factor(Grasshopper), # re-factor the max values
            Planthopper = as.factor(Planthopper)) # re-factor

# add missing months to the data to NAs rather than blank observations
additional_data2 <- data.frame(
  month_name = factor(c("Feb", "June", "Sept", "Oct", "Oct", "Nov", "Nov"),
                      levels = month.name.short), year = factor(c(2020, 2019, 2017, 2018, 2019, 2016, 2021))
)

# join additional month data to abundance data and pivot to be able to facet
full_heatmap_data <- full_join(invert_binary, additional_data2) %>%
  pivot_longer(cols = Grasshopper:Planthopper, names_to = "Animal",
               values_to = "Abundance") %>%
  mutate(Animal = case_when(Animal == "Grasshopper" ~ "**Grasshopper**<br>(*Caelifera*)",
                            Animal == "Planthopper" ~ "**Planthopper**<br>(*Prokelisia*)"))

# prepare data for bar chart by month ----
snail_bar_month <- stem_animals %>%
  filter(year != 2013) %>% # data collection began par way through 2013
  mutate(month_name = as.factor(month.name[month]), # adding the written out month name
         month_name = factor(month_name, levels = month.name)) %>%
  dplyr::select(month, month_name, year, date, littoraria_count) %>% # select necessary cols
  group_by(month_name) %>%
  summarise(littoraria_count = sum(littoraria_count, na.rm = TRUE)) # find total time period counts per month

# data prep for line plot ----
snail_plotting <- stem_animals %>%
  filter(year != 2013) %>%
  mutate(year_month = format(date, "%y/%m")) %>% # format into year month
  group_by(year_month) %>%
  summarise(counts = sum(littoraria_count, na.rm = TRUE)) %>% # find the sum for each month
  mutate(year_month = ym(year_month)) # get the year month
```

# Plots

### Heat map for grasshopper and plant hopper abundance

```{r, fig.width=14, fig.height=7}
ggplot(full_heatmap_data) +
  geom_tile(aes(x = month_name, y = year, fill = Abundance), color = "black") +
  scale_fill_manual(values = c("white","#DFE3CE","#BDCFA1","#455D44", "#23341E"),  # set color scale
                    labels = c("Absent","Rare", "Common", "Abundant", "Very Abundant"), # change legend labels
                    na.value = "grey") +
  facet_wrap(~Animal) + # one plot for each animal
  labs(title = "**Grasshopper and Planthopper abundance over time**", 
       subtitle = "Observations from the Georgia Coastal Ecosystem LTER Flux Tower 2014 to 2022",
       x = "**Month**",
       y = "**Year**",
       fill = "**Abundance**") +
  theme_minimal(base_family = "fira condensed") +
  # set theme options - adjust title, text, and grid lines
  theme(axis.line = element_blank(),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
        axis.text.y = element_text(size = 13),
        axis.title.y = element_markdown(margin = margin(r = 16), size = 17),
        axis.title.x = element_markdown(margin = margin(t = 16), size = 17),
        plot.title = element_markdown(size = 23, hjust = 0.5),  # Center the title
        plot.subtitle = element_text(hjust = 0.5, size = 16),
        legend.title = element_markdown(size = 13),
        legend.text = element_text(size = 13),
        strip.text = element_markdown(size = 13, face = "bold")) 
```

### Line plot for snail counts over the time period

```{r, fig.width=14, fig.height=7}
ggplot(snail_plotting, aes(x = year_month, y = counts, group = 1)) +
  geom_point(color = "#455D44", size = 2) + # adjust color and point size
  geom_line(color = "#455D44", size = 1) + # adjust color and linewidth
  theme_bw() +
  labs(x = "**Year**", y = "**Number of Marsh Periwinkle Snails**",
       title = "**Marsh Periwinkle Snail abundance over time**",
       subtitle = "Snail counts at the Georgia Coastal Ecosystem LTER Flux Tower 2014 to 2022") +
  theme_minimal(base_family = "fira condensed") +
  # set theme options - adjust title, text, and grid lines
  theme(panel.grid = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
        axis.text.y = element_text(size = 13),
        axis.title.y = element_markdown(margin = margin(r = 15), size = 17),
        axis.title.x = element_markdown(margin = margin(t = 15), size = 17),
        panel.grid.major.x = element_line(color = "grey50", linewidth = 0.25, linetype = "dotted"),
        panel.grid.major.y = element_line(color = "grey50", linetype = "dotted"),
        plot.title = element_markdown(size = 23, hjust = 0.5, family = "fira condensed"),
        plot.subtitle = element_text(size = 16, hjust = 0.5)
        ) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y") # get each year to show on the x-axis
```

### Bar chart for snail counts by month

```{r, fig.width=14, fig.height=9}

snail_img <- png::readPNG(here::here("photos" ,"marsh_periwinkle.PNG"))
snail_img <- grid::rasterGrob(snail_img)

ggplot(snail_bar_month, aes(x = as.numeric(month_name), y = littoraria_count)) +
  # add rectangle to indicate hatching season
  geom_rect(aes(xmin = as.numeric(factor("June", levels = month.name)) - 0.5, # adjust rectangle to go over the whole month
                xmax = as.numeric(factor("August", levels = month.name)) + 0.5, # adjust rectangle to go over the whole month
                ymin = 0, ymax = 5200),
            alpha = 0.1, fill = "grey", size = 0.7) + # change fill and border 
    geom_col(fill = "#455D44") +
  scale_x_continuous(breaks = as.numeric(factor(month.name, levels = month.name)), labels = month.name) + # set x-axis labels to the month names
  theme_bw() +
  labs(x = "**Month**",
       y = "**Number of Marsh Periwinkle Snails<br>(2014-2022)**",
       title = "**Marsh Periwinkle Snail abundance variation by month**",
       subtitle = "Total counts at the Georgia Coastal Ecosystem LTER Flux Tower 2014 to 2022") +
  theme_minimal(base_family = "fira condensed") + # set theme
# set theme - adjust axis lines, text size
  theme(panel.grid = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
        axis.text.y = element_text(size = 13),
        axis.title.y = element_markdown(margin = margin(r = 15), size = 17),
        axis.title.x = element_markdown(margin = margin(t = 15), size = 17),
        panel.grid.major.x = element_line(color = "grey50", linewidth = 0.25, linetype = "dotted"),
        panel.grid.major.y = element_line(color = "grey50", linetype = "dotted"),
        plot.title = element_markdown(size = 23, hjust = 0.5, family = "fira condensed"),
        plot.subtitle = element_text(size = 16, hjust = 0.5)) +
  annotate(geom = "text", # add text annotation to the rectangle indicator
    x = 7, y = 5400, # adjust the positioning
    label = "bold(`Snail egg hatching season`)",
    size = 5, family = "fira condensed", parse = TRUE
  ) +
  annotation_custom(snail_img, 
                  xmin = as.numeric(factor("January", levels = month.name)) - 1.8, 
                  xmax = as.numeric(factor("February", levels = month.name)), 
                  ymin = 2000, 
                  ymax = 8700) +
coord_cartesian(clip = 'off')
```


# viz w/out titles
```{r}

snail_img <- png::readPNG(here::here("photos" ,"marsh_periwinkle.PNG"))
snail_img <- grid::rasterGrob(snail_img)

ggplot(snail_bar_month, aes(x = as.numeric(month_name), y = littoraria_count)) +
  # add rectangle to indicate hatching season
  geom_rect(aes(xmin = as.numeric(factor("June", levels = month.name)) - 0.5, # adjust rectangle to go over the whole month
                xmax = as.numeric(factor("August", levels = month.name)) + 0.5, # adjust rectangle to go over the whole month
                ymin = 0, ymax = 5200),
            alpha = 0.1, fill = "grey", size = 0.7) + # change fill and border 
    geom_col(fill = "#455D44") +
  scale_x_continuous(breaks = as.numeric(factor(month.name.short, levels = month.name.short)), labels = month.name.short) + # set x-axis labels to the month names
  theme_bw() +
  labs(x = "**Month**",
       y = "**Cumulative Snail Counts<br>(2014-2022)**",
       title = "**Marsh Periwinkle Snail**",
       subtitle = "(*Littoraria irrorata*)") +
  theme_minimal(base_family = "fira condensed") + # set theme
# set theme - adjust axis lines, text size
  theme(panel.grid = element_blank(),
        axis.text.x = element_text(size = 28, color = "black"),
        axis.text.y = element_text(size = 28, color = "black"),
        axis.title.y = element_markdown(margin = margin(r = 15), size = 31),
        axis.title.x = element_markdown(margin = margin(t = 15), size = 31),
        panel.grid.major.y = element_line(color = "black", linetype = "dotted", linewidth = 1),
        axis.line = element_line(color = "black"),
        plot.title = element_markdown(size = 40, hjust = 0.5, family = "fira condensed"),
        plot.subtitle = element_markdown(size = 28, hjust = 0.5)) +
  annotate(geom = "text", # add text annotation to the rectangle indicator
    x = 7, y = 5400, # adjust the positioning
    label = "bold(`Snail egg hatching season`)",
    size = 9, family = "fira condensed", parse = TRUE
  ) 

# heat map ----
ggplot(full_heatmap_data) +
  geom_tile(aes(x = month_name, y = year, fill = Abundance), color = "black") +
  scale_fill_manual(values = c("white","#DFE3CE","#BDCFA1","#455D44", "#23341E"),  # set color scale
                    labels = c("Absent","Rare", "Common", "Abundant", "Very Abundant"), # change legend labels
                    na.value = "grey") +
  facet_wrap(~factor(Animal, levels=c("**Planthopper**<br>(*Prokelisia*)", '**Grasshopper**<br>(*Caelifera*)')), ncol = 1, scales = "free_x") + # one plot for each animal
  labs(title = "", 
       subtitle = "",
       x = "**Month**",
       y = "**Year**",
       fill = "**Abundance**") +
  theme_minimal(base_family = "fira condensed") +
  # set theme options - adjust title, text, and grid lines
  theme(axis.line = element_blank(),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        axis.text.x = element_text(size = 28, color = "black"),
        axis.text.y = element_text(size = 28, color = "black"),
        axis.title.y = element_markdown(margin = margin(r = 16), size = 31),
        axis.title.x = element_markdown(margin = margin(t = 16), size = 31),
        plot.title = element_markdown(size = 23, hjust = 0.5),  # Center the title
        plot.subtitle = element_text(hjust = 0.5, size = 16),
        legend.title = element_markdown(size = 33),
        legend.text = element_text(size = 30),
        strip.text = element_markdown(size = 40),
        panel.spacing = unit(30, "pt"))
```


```{r}
ggsave("plots/periwinkleplot.png", width = 20, height = 15)
ggsave("plots/heatplot.png", width = 20, height = 25)

```


```{r}
all_states <- map_data("state")  
ga <- filter(all_states, region == "georgia")
mypoint <- data.frame(long = -81.28400, lat = 31.44986)


ggplot() +
  geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="white", fill="grey" ) +
  geom_polygon(data = ga, aes(x=long, y=lat, group = group),fill="seagreen") +
  geom_point(data = mypoint, aes(x = long, y = lat),
                   color = "#23341E", size = 4, shape = 23, fill = "purple") +
  theme_void()
```



```{r}
ggsave("plots/map.png", width = 15, height = 10)
```

