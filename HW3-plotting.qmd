---
title: "HW3-plotting"
author: "Sam Muir"
date: 2024-03-02
format:
  html:
    embed-resources: true
---

1.  Which option do you plan to pursue?

-   I am planning to make an infographic

2.  Restate your question(s). Has this changed at all since HW #1? If yes, how so?

-   My question has changed a bit as I've worked with the data more. I have landed on "How has the abundance of invertebrate animals changed over time at the Georgia Coastal Ecosystem LTER Flux Tower?". This is more focused to one topic and I think will be easier to communicate than my previous question which encompassed too many factors. My sub-questions are:
    -   "How do grasshopper and planthopper abundances vary by year and month?"
    -   "How have Marsh Periwinkle Snail counts changed over time?"
    -   "In which months are Marsh Periwinkle Snails most abundant?"

3.  Explain which variables from your data set(s) you will use to answer your question(s).

-   I have a couple of different data sets from the same study at the LTER site. I am going to use grasshopper_abundance_index (abundance classification for grasshoppers), prokelisia_abundance index (abundance classification for planthoppers), littoraria_count (Marsh Periwinkle Snail count), and date. After wrangling the data, I was able to join the ones I wanted to use. I calculated the maximum grasshopper and plant hopper abundance by taking the highest abundance for each month and year. This allows me to plot the abundance level for each year and month. For the snails, I was able to find the counts for each month over the different years so I can visualize the change in counts over time. I also calculated the total counts over the 2014-2022 time period for each month so I can find the months with the highest occurrences.

4.  In HW #2, you should have created some exploratory data viz to better understand your data. You may already have some ideas of how you plan to formally visualize your data, but it's incredibly helpful to look at visualizations by other creators for inspiration. Find at least two data visualizations that you could (potentially) borrow / adapt pieces from. Link to them or download and embed them into your .qmd file, and explain which elements you might borrow (e.g. the graphic form, legend design, layout, etc.).

![https://github.com/doehm/tidytues?tab=readme-ov-file#week-10-numbats](photos/hatmap.png){width="594"}

-   This is the kind of heat map I want to make for the planthopper and grasshopper abundance plots, but since my data is factored, mine will not be a continuous scale.

![https://r-graphics.org/recipe-annotate-rect](photos/shaded_plot.png){width="599"}

-   I want to add a shaded region, like the rectangle on this plots, to my bar plot to show the months that the snail eggs typically hatch

5.  Hand-draw your anticipated three visualizations (option 1) or infographic (option 2). Take a photo of your drawing and embed it in your rendered .qmd file -- note that these are not exploratory visualizations, but rather your plan for your final visualizations that you will eventually polish and submit with HW #4.

![](photos/drawings.jpg){width="500"}

5.  Mock up your visualizations using code. We understand that you will continue to iterate on these into HW #4 (particularly after receiving feedback), but by the end of HW #3, you should:

-   have your data plotted (if you're experimenting with an advanced graphic form(s) that were not explicitly covered in class, we understand that this may take some more time to build; you should have as much put together as possible)
-   use appropriate strategies to highlight / focus attention on a clear message
-   include appropriate text such as titles, captions, axis labels
-   experiment with colors and typefaces / fonts
-   create a presentable / aesthetically-pleasing theme (e.g. (re)move gridlines / legends as appropriate, adjust font sizes, etc.)

```{r, echo = FALSE}
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
```

```{r, libraries, message=FALSE}
# libraries
library(tidyverse)
library(janitor)
library(sf)
library(sysfonts)
library(scales)
library(patchwork)
```

```{r}
# read in the data
animals <- read_csv("data/animals/PLT-GCEM-1610_Animals_9_0.CSV", skip = 2)[-c(1,2),]
biomass <- read_csv("data/biomass/PLT-GCEM-1610_Biomass_10_0.CSV", skip = 2)[-c(1,2),]
vegetation <- read_csv("data/vegetation/PLT-GCEM-1610_Vegetation_9_0.CSV", skip = 2)[-c(1,2),]
stemheight <- read_csv("data/stemheight/PLT-GCEM-1610_StemHeight_10_0.CSV", skip = 2)[-c(1,2),]
```

```{r, data cleaning, warning=FALSE, message=FALSE}
# data cleaning 
animals_clean <- animals %>%
  clean_names() %>%
  mutate_at(c("latitude", "longitude", "littoraria_count"), as.numeric) %>% # change cols to numeric
  mutate_at(c("grasshopper_abundance_index", "prokelisia_abundance_index", "littoraria_quadrat_area", "plot_number", "spartina_zone"), as.factor) %>% # change cols to factor
  mutate(date = lubridate::as_date(date)) # change date to a date

biomass_clean <- biomass %>%
  clean_names() %>%
  mutate_at(c("biomass_aboveground_green", "biomass_aboveground_brown", "biomass_aboveground_total", "biomass_belowground_0to10cm", "biomass_belowground_10to30cm", "biomass_belowground_total", "rhizomes_0to10cm", "root_to_shoot_ratio"), as.numeric) %>% # change cols to numeric
  mutate_at(c("spartina_zone", "replicate"), as.factor) %>% # change cols to factor
  mutate(date = lubridate::as_date(date)) # change date to a date

stemheight_clean <- stemheight %>%
  clean_names() %>%
  mutate_at(c("spartina_zone"), as.factor) %>% # change cols to factor
  mutate_at(c("core_number", "stem_number", "stem_height"), as.numeric) %>% # change cols to numeric
  mutate(date = lubridate::as_date(date))

## maybe there was a better way to do all of this? but seems like good practice either way 

# joining some of the data frames
stem_animals <- full_join(animals_clean, stemheight_clean, relationship = "many-to-many") %>% # join animals and stemheight
  mutate(year = as.factor(year(date)), # get year from the date
         month = as.factor(month(date))) %>% # get month from the date
  full_join(biomass_clean)
```

## Data preparation

```{r}
# # prepare snail data for heatmap
# snail_heatmap <- stem_animals %>%
#   filter(year != 2013) %>%
#   mutate(month_name = as.factor(month.name[month]),
#          month_name = factor(month_name, levels = month.name)) %>%
#   select(month, month_name, year, date, littoraria_count, spartina_zone) %>%
#   group_by(month_name, year) %>%
#   summarise(littoraria_count = sum(littoraria_count, na.rm = TRUE))
# 
# additional_data <- data.frame(
#   month_name = factor(c("June", "September", "October", "October", "November", "November"),
#                       levels = month.name),
#   year = factor(c(2019, 2017, 2018, 2019, 2016, 2021))
# )
# 
# full_snail_heatmap <- full_join(snail_heatmap, additional_data)

# prepare grasshopper data for heatmap ----
invert_binary <- stem_animals %>%
  filter(year != 2013) %>% # data collection began par way through 2013
  mutate(month_name = as.factor(month.name[month]), # adding the written out month name
         month_name = factor(month_name, levels = month.name),
         grasshopper_abundance_index = as.character(grasshopper_abundance_index), # convert abundance to character
         prokelisia_abundance_index = as.character(prokelisia_abundance_index), # convert abundance to numeric
         grasshopper_abundance_index = as.numeric(grasshopper_abundance_index), # convert abundance to character
         prokelisia_abundance_index = as.numeric(prokelisia_abundance_index)) %>% # convert abundance to numeric
  select(month, month_name, year, date, grasshopper_abundance_index, prokelisia_abundance_index) %>% # select necessary columns
  group_by(month_name, year) %>% # group to summarize counts 
  summarise(Grasshopper = max(grasshopper_abundance_index), # find the max for each month of each year
            Planthopper = max(prokelisia_abundance_index), # find the max for each month of each year
            Grasshopper = as.factor(Grasshopper), # re-factor the max values
            Planthopper = as.factor(Planthopper)) # re-factor

# add missing months to the data to NAs rather than bank observations
additional_data2 <- data.frame(
  month_name = factor(c("February", "June", "September", "October", "October", "November", "November"),
                      levels = month.name), year = factor(c(2020, 2019, 2017, 2018, 2019, 2016, 2021))
)

# join additional month data to abundance data and pivot to be able to facet
full_heatmap_data <- full_join(invert_binary, additional_data2) %>%
  pivot_longer(cols = Grasshopper:Planthopper, names_to = "Animal",
               values_to = "Abundance")

# prepare data for bar chart by month ----
snail_bar_month <- stem_animals %>%
  filter(year != 2013) %>% # data collection began par way through 2013
  mutate(month_name = as.factor(month.name[month]),
         month_name = factor(month_name, levels = month.name)) %>%
  select(month, month_name, year, date, littoraria_count) %>%
  group_by(month_name) %>%
  summarise(littoraria_count = sum(littoraria_count, na.rm = TRUE))

# data prep for line plot ----
snail_plotting <- stem_animals %>%
  filter(year != 2013) %>%
  mutate(year_month = format(date, "%y/%m")) %>%
  group_by(year_month) %>%
  summarise(counts = sum(littoraria_count, na.rm = TRUE)) %>%
  mutate(year_month = ym(year_month))
```

# Plots

## Plots I made but am not planning to use

```{r}
# ggplot(full_snail_heatmap) +
#   geom_tile(aes(x = month_name, y = year, fill = littoraria_count), color = "slategrey") +
#   scale_fill_gradient(low = "white", high = "purple4") +
#   ggnewscale::new_scale_color() +
#   geom_tile(data = subset(full_snail_heatmap, is.na(littoraria_count)),
#             aes(x = month_name, y = year, color = "slategrey"), fill = "grey", linewidth = 0) +
#   labs(title = "Marsh Periwinkle Snail Counts", 
#        subtitle = "at the Georgia Coastal Ecosystem LTER Flux Tower (2014-2022)",
#        x = "",
#        y = "Year",
#        fill = "Snail Counts",
#        color = "No Data") +
#   theme_minimal(base_family = "fira condensed") +
#   theme(axis.line = element_blank(),
#         panel.grid = element_blank(),
#         panel.border = element_blank(),
#         axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
#         axis.text.y = element_text(size = 13),
#         axis.title.y = element_text(margin = margin(r = 16), size = 17),
#         plot.title = element_text(size = 26, hjust = 0.5),  # Center the title
#         plot.subtitle = element_text(hjust = 0.5)) +
#   guides(color = guide_legend(override.aes = list(fill = "grey"), label = FALSE))

# grasshopper_plot <- ggplot(grasshopper_heatmap) +
#   geom_tile(aes(x = month_name, y = year, fill = max_grasshopper), color = "black") +
#   scale_fill_manual(values = c("#DFE3CE","#BDCFA1","#455D44", "#23341E"), labels = c("Rare", "Common", "Abundant", "Very Abundant")) +
#   labs(title = "Invertebrate Animal Abundance at the\n Georgia Coastal Ecosystem LTER Flux Tower (2014-2022)", 
#        subtitle = "Grasshopper",
#        x = "",
#        y = "Year",
#        fill = "Abundance") +
#   theme_minimal(base_family = "fira condensed") +
#   theme(axis.line = element_blank(),
#         panel.grid = element_blank(),
#         panel.border = element_blank(),
#         axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
#         axis.text.y = element_text(size = 13),
#         axis.title.y = element_text(margin = margin(r = 16), size = 17),
#         plot.title = element_text(size = 20, hjust = 0.5),  # Center the title
#         plot.subtitle = element_text(hjust = 0.5, size = 17)) +
#   guides(color = guide_legend(override.aes = list(fill = "grey"), label = FALSE))

# planthopper_plot <- ggplot(planthopper_heatmap) +
#   geom_tile(aes(x = month_name, y = year, fill = max_planthopper), color = "black") +
#   scale_fill_manual(values = c(0 = "white", 1 = "#DFE3CE", 2 = "#BDCFA1", 3 = "#455D44", 4 = "#23341E"), 
#                     labels = c("Absent","Rare", "Common", "Abundant", "Very Abundant")) +
#   labs(subtitle = "Planthopper", 
#        x = "",
#        y = "Year",
#        fill = "Abundance") +
#   theme_minimal(base_family = "fira condensed") +
#   theme(axis.line = element_blank(),
#         panel.grid = element_blank(),
#         panel.border = element_blank(),
#         axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
#         axis.text.y = element_text(size = 13),
#         axis.title.y = element_text(margin = margin(r = 16), size = 17),
#         plot.title = element_text(size = 17, hjust = 0.5),  # Center the title
#         plot.subtitle = element_text(hjust = 0.5, size = 17)) +
#   guides(color = guide_legend(override.aes = list(fill = "grey"), label = FALSE))
```

## Plots that I am going to use

### heat map for grasshopper and plant hopper abundance

```{r, fig.width=12, fig.height=6}
ggplot(full_heatmap_data) +
  geom_tile(aes(x = month_name, y = year, fill = Abundance), color = "black") +
  scale_fill_manual(values = c("white","#DFE3CE","#BDCFA1","#455D44", "#23341E"),  # set color scale
                    labels = c("Absent","Rare", "Common", "Abundant", "Very Abundant"), # change legend labels
                    na.value = "grey") +
  facet_wrap(~Animal) +
  labs(title = "How has Grasshopper and Planthopper Abundance changed at the\n Georgia Coastal Ecosystem LTER Flux Tower 2014-2022?", 
       x = "",
       y = "Year",
       fill = "Abundance") +
  theme_minimal(base_family = "fira condensed") +
  # set theme options - adjust title, text, and grid lines
  theme(axis.line = element_blank(),
        panel.grid = element_blank(),
        panel.border = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, size = 13),
        axis.text.y = element_text(size = 13),
        axis.title.y = element_text(margin = margin(r = 16), size = 17),
        plot.title = element_text(size = 20, hjust = 0.5),  # Center the title
        plot.subtitle = element_text(hjust = 0.5, size = 17),
        strip.text = element_text(size = 13)) 
```

### line plot for snail counts over the time period plot (each point is total for that month)

```{r}
ggplot(snail_plotting, aes(x = year_month, y = counts, group = 1)) +
  geom_point(color = "#455D44", size = 2) + # adjust color and point size
  geom_line(color = "#455D44", size = 1) + # adjust color and linewidth
  theme_bw() +
  labs(x = "Year", y = "Number of Marsh Periwinkle Snails",
       title = "How has Marsh Periwinkle Snail Abundance changed at the\n Georgia Coastal Ecosystem LTER Flux Tower 2014-2022?") +
  theme_minimal(base_family = "fira condensed") +
  # set theme options - adjust title, text, and grid lines
  theme(panel.grid = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        axis.title.y = element_text(margin = margin(r = 15)),
        axis.title.x = element_text(margin = margin(t = 15)),
        panel.grid.major.x = element_line(color = "grey50", linewidth = 0.25, linetype = "dotted"),
        panel.grid.major.y = element_line(color = "grey50", linetype = "dotted")
        ) +
  scale_x_date(date_breaks = "1 year", date_labels = "%Y")
```

### bar chart for snail counts by month

```{r}
ggplot(snail_bar_month, aes(x = as.numeric(month_name), y = littoraria_count)) +
  # add rectangle to indicate hatching season
  geom_rect(aes(xmin = as.numeric(factor("June", levels = month.name)) - 0.5, 
                xmax = as.numeric(factor("August", levels = month.name)) + 0.5,
                ymin = 0, ymax = 5200),
            alpha = 0.1, fill = "grey", color = "black", size = 0.7) + # change fill and border 
    geom_col(fill = "#455D44") +
  scale_x_continuous(breaks = as.numeric(factor(month.name, levels = month.name)), labels = month.name) + # set x-axis labels to the month names
  theme_bw() +
  labs(x = "",
       y = "Number of Marsh Periwinkle Snails\n(2014-2022)",
       title = "How does Marsh Periwinkle Snail Abundance vary by month\n at the Georgia Coastal Ecosystem LTER Flux Tower?") +
  theme_minimal(base_family = "fira condensed") +
# set theme - adjust axis lines, text size
  theme(panel.grid = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1),
        axis.title.y = element_text(margin = margin(r = 15)),
        axis.title.x = element_text(margin = margin(t = 15)),
        panel.grid.major.x = element_line(color = "grey50", linewidth = 0.25, linetype = "dotted"),
        panel.grid.major.y = element_line(color = "grey50", linetype = "dotted")) +
  annotate(geom = "text", # add text annotation to the rectangle indicator
    x = 7, y = 5500, # adjust the positioning
    label = "Snail egg hatching season",
    size = 5, family = "fira condensed"
  )
```

7.  Answer the following questions:

-   What challenges did you encounter or anticipate encountering as you continue to build / iterate on your visualizations in R?
    -   I had a hard time adding the shaded rectangle to the bar plot since my x-axis is categorical. Specifying just the month name would only draw the box to the tick mark for that month, which is only over half the bar, so it took a few different tests of code to get it where I wanted it. I think it might be a challenge to get the plots patchworked together in a way that doesn't make any of them look stretched or squished. As I'm putting them all together, I anticipate needing to change title sizes/ placements, and changing labels. I would also like to add a picture of each species, but I'm not sure where the best places will be yet.
-   What ggplot extension tools / packages do you need to use to build your visualizations? Are there any that we haven't covered in class that you'll be learning how to use for your visualizations?
    -   I am planning to use {patchwork}, but I might also use {cowplot} to arrange or add images to the plots. I don't think we've used cowplot much in class, but I have used it a little bit before, so I will be looking up more documentation for those functions.
-   What feedback do you need from the instructional team and / or your peers to ensure that your intended message is clear?
    -   Is it clear why I made a line plot and a bar plot for the snails? The idea is that I wanted to show counts over time vs counts per month (where, for example, the january value is the total sum of january counts for the entire time period)

        -   I'm not sure if I need to clarify this in the titles better or if it makes sense as is
