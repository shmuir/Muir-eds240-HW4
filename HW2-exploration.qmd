---
title: "HW2-exploration"
author: "Sam Muir"
format: html
---

```{r, libraries}
# libraries
library(metajam) 
library(tidyverse)
library(janitor)
```

```{r, read data}
#...................download data from DataOne...................
download_d1_data_pkg("https://gmn.lternet.edu/mn/v2/packages/application%2Fbagit-097/doi%3A10.6073%2Fpasta%2F9746c71b35e9f8c544ea12c601c33949", path = here::here("data")) 

#  ~ NOTE: I recommend renaming the downloaded folder to 'data/' so that it's ignored by .gitignore! ~

#....................read in downloaded files....................
animals_all <- read_d1_files(here::here("data", "animals"))
biomass_all <- read_d1_files(here::here("data", "biomass"))
vegetation_all <- read_d1_files(here::here("data", "vegetation"))
stemheight_all <- read_d1_files(here::here("data", "stemheight"))

#........................get the data file.......................
# the data was formatted very weirdly with a few different column headers, so first 2 rows needed to be not read in (skip = 2), the third row was the correct column header, and then there were 2 more rows after that which were other info on the data types, so they were removed as well [-c(1,2),]

animals <- read_csv("data/animals/PLT-GCEM-1610_Animals_9_0.CSV", skip = 2)[-c(1,2),]
biomass <- read_csv("data/biomass/PLT-GCEM-1610_Biomass_10_0.CSV", skip = 2)[-c(1,2),]
vegetation <- read_csv("data/vegetation/PLT-GCEM-1610_Vegetation_9_0.CSV", skip = 2)[-c(1,2),]
stemheight <- read_csv("data/stemheight/PLT-GCEM-1610_StemHeight_10_0.CSV", skip = 2)[-c(1,2),]
```

```{r, data cleaning}
# data cleaning 
# but now after all of the wrangling to get the data read in right, all of the colums are classified as character...

animals_clean <- animals %>%
  clean_names() %>%
  mutate_at(c("latitude", "longitude", "littoraria_count"), as.numeric) %>%
  mutate_at(c("grasshopper_abundance_index", "prokelisia_abundance_index", "littoraria_quadrat_area", "plot_number", "spartina_zone"), as.factor) %>%
  mutate(date = lubridate::as_date(date))

biomass_clean <- biomass %>%
  clean_names() %>%
  mutate_at(c("biomass_aboveground_green", "biomass_aboveground_brown", "biomass_aboveground_total", "biomass_belowground_0to10cm", "biomass_belowground_10to30cm", "biomass_belowground_total", "rhizomes_0to10cm", "root_to_shoot_ratio"), as.numeric) %>%
  mutate_at(c("spartina_zone", "replicate"), as.factor) %>%
  mutate(date = lubridate::as_date(date))

vegetation_clean <- vegetation %>%
  clean_names() %>%
  mutate_at(c("latitude", "longitude", "plant_height"), as.numeric) %>%
  mutate_at(c("spartina_zone", "plot_number", "quadrat_area", "flowering_status"), as.factor) %>%
  mutate(date = lubridate::as_date(date))

stemheight_clean <- stemheight %>%
  clean_names() %>%
  mutate_at(c("spartina_zone"), as.factor) %>%
  mutate_at(c("core_number", "stem_number", "stem_height"), as.numeric) %>%
  mutate(date = lubridate::as_date(date))

## maybe there was a better way to do all of this? but seems like good practice either way 
```

```{r}
stem_animals <- full_join(animals_clean, stemheight_clean, relationship = "many-to-many") %>%
  mutate(year = as.factor(year(date)),
         month = as.factor(month(date))) %>%
  full_join(biomass_clean)
```


## exploratory data viz

**initial question:** how do stem height and biomass relate to the abundance of invertebrate populations

```{r}
ggplot(animals_clean, aes(x = plot_number, y = littoraria_count)) +
  geom_col()

ggplot(animals_clean, aes(x = littoraria_count)) +
  geom_histogram()

ggplot(stemheight_clean, aes(x = stem_height)) +
  geom_histogram()

ggplot(stem_animals, aes(x = stem_height, y = littoraria_count)) +
  geom_point() +
  facet_wrap(~spartina_zone)

ggplot(stem_animals, aes(x = year, y = littoraria_count, fill = spartina_zone)) +
  geom_col(position = position_dodge())

ggplot(stem_animals, aes(x = biomass_aboveground_total, y = littoraria_count)) +
  geom_point() + 
  facet_wrap(~spartina_zone)

ggplot(stem_animals, aes(x = biomass_aboveground_total, y = littoraria_count)) +
  geom_hex() +
  scale_fill_viridis_c()
```






